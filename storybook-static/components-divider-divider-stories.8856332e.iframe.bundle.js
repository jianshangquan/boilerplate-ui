"use strict";(self.webpackChunkboilerplate_ui=self.webpackChunkboilerplate_ui||[]).push([[224],{"./src/components/divider/divider.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FirstStory:()=>FirstStory,__namedExportsOrder:()=>__namedExportsOrder,default:()=>divider_stories});__webpack_require__("./src/style.css");var react=__webpack_require__("./node_modules/react/index.js");function Divider({color="black",opacity=.25,horizontal=!0,vertical,rounded,gap="0rem",boldSize="1px",className=""}){let width=`calc(100%-(${gap}*2))`,height=boldSize;return horizontal&&(width=`calc(100% - (${gap} * 2))`,height=boldSize),vertical&&(width=boldSize,height=`calc(100% - (${gap} * 2))`),react.createElement("div",{style:{backgroundColor:color,width,height,opacity,marginLeft:horizontal?gap:"0px",marginRight:horizontal?gap:"0px",marginTop:vertical?gap:"0px",marginBottom:vertical?gap:"0px",borderRadius:"999999px"},className})}Divider.__docgenInfo={description:"",methods:[],displayName:"Divider",props:{color:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'black'",computed:!1}},opacity:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"0.25",computed:!1}},horizontal:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},vertical:{required:!1,tsType:{name:"boolean"},description:""},rounded:{required:!1,tsType:{name:"any"},description:""},gap:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'0rem'",computed:!1}},boldSize:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'1px'",computed:!1}},className:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'""',computed:!1}}}};const divider_stories={title:"components/Divider",component:Divider,id:"divider"},FirstStory={name:"divider",args:{},render:()=>react.createElement((()=>{const[value,setValue]=(0,react.useState)(1);return react.createElement("div",{className:"w-full h-[100vh] flex items-center justify-center"},react.createElement(Divider,null))}))};FirstStory.parameters={...FirstStory.parameters,docs:{...FirstStory.parameters?.docs,source:{originalSource:"{\n  name: 'divider',\n  args: {\n    //ðŸ‘‡ The args you need here will depend on your component\n  },\n  render() {\n    return React.createElement(() => {\n      const [value, setValue] = useState(1);\n      return <div className=\"w-full h-[100vh] flex items-center justify-center\">\n          <Divider />\n        </div>;\n    });\n  }\n}",...FirstStory.parameters?.docs?.source}}};const __namedExportsOrder=["FirstStory"]}}]);