"use strict";(self.webpackChunkboilerplate_ui=self.webpackChunkboilerplate_ui||[]).push([[393],{"./src/components/circular-progress/circular-progress.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FirstStory:()=>FirstStory,__namedExportsOrder:()=>__namedExportsOrder,default:()=>circular_progress_stories});__webpack_require__("./src/style.css");var react=__webpack_require__("./node_modules/react/index.js");function CircularProgress({size=20,strokeWidth=3,pathLength=100,progress=50,className="stroke-black dark:stroke-white",isProcessing=!1}){const[percentage,setPercentage]=(0,react.useState)(progress),[isInProcessing,setIsInProcessing]=(0,react.useState)(isProcessing),radius=(size-2*strokeWidth)/2,x=(size+2*strokeWidth)/2,y=(size+2*strokeWidth)/2;return(0,react.useEffect)((()=>{setPercentage(progress)}),[progress]),(0,react.useEffect)((()=>{setIsInProcessing(isProcessing)}),[isProcessing]),react.createElement("svg",{height:size+2*strokeWidth,width:size+2*strokeWidth,className:`${isInProcessing&&"animate-spin"}`,style:{transform:"rotate(-90deg)"}},react.createElement("circle",{cx:x,cy:y,r:radius,pathLength,strokeWidth,fill:"transparent",className:`${className} stroke-primary`,style:{strokeLinecap:"round",strokeDasharray:isInProcessing?"25 25 25 25":`${percentage} ${pathLength}`}}))}CircularProgress.__docgenInfo={description:"",methods:[],displayName:"CircularProgress",props:{size:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"20",computed:!1}},strokeWidth:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"3",computed:!1}},pathLength:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"100",computed:!1}},progress:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"50",computed:!1}},className:{required:!1,tsType:{name:"union",raw:"string | undefined",elements:[{name:"string"},{name:"undefined"}]},description:"",defaultValue:{value:'"stroke-black dark:stroke-white"',computed:!1}},isProcessing:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}}}};const circular_progress_stories={title:"components/Circular Progress",component:CircularProgress,id:"circular-progress"},FirstStory={name:"circular progress",args:{},render:()=>react.createElement((()=>{const[value,setValue]=(0,react.useState)(1);return react.createElement("div",{className:"w-full h-[100vh] flex items-center justify-center"},react.createElement(CircularProgress,{progress:40,pathLength:100,size:30}),react.createElement(CircularProgress,{progress:10,pathLength:100,size:30,isProcessing:!0}))}))};FirstStory.parameters={...FirstStory.parameters,docs:{...FirstStory.parameters?.docs,source:{originalSource:"{\n  name: 'circular progress',\n  args: {\n    //ðŸ‘‡ The args you need here will depend on your component\n  },\n  render() {\n    return React.createElement(() => {\n      const [value, setValue] = useState(1);\n      return <div className=\"w-full h-[100vh] flex items-center justify-center\">\n          <CircularProgress progress={40} pathLength={100} size={30} />\n          <CircularProgress progress={10} pathLength={100} size={30} isProcessing={true} />\n        </div>;\n    });\n  }\n}",...FirstStory.parameters?.docs?.source}}};const __namedExportsOrder=["FirstStory"]}}]);